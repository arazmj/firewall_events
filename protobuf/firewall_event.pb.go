// Code generated by protoc-gen-go. DO NOT EDIT.
// source: firewall_event.proto

package tutorial

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	SrcIpAddr            uint32               `protobuf:"fixed32,1,opt,name=src_ip_addr,json=srcIpAddr,proto3" json:"src_ip_addr,omitempty"`
	DstIpAddr            uint32               `protobuf:"fixed32,2,opt,name=dst_ip_addr,json=dstIpAddr,proto3" json:"dst_ip_addr,omitempty"`
	SrcPort              uint32               `protobuf:"varint,3,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort              uint32               `protobuf:"varint,4,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	LastUpdated          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	DeviceId             int32                `protobuf:"varint,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Action               int32                `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty"`
	AclRuleId            int32                `protobuf:"varint,8,opt,name=acl_rule_id,json=aclRuleId,proto3" json:"acl_rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_firewall_event_006e9b0f0cbf225a, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetSrcIpAddr() uint32 {
	if m != nil {
		return m.SrcIpAddr
	}
	return 0
}

func (m *Event) GetDstIpAddr() uint32 {
	if m != nil {
		return m.DstIpAddr
	}
	return 0
}

func (m *Event) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *Event) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *Event) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

func (m *Event) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *Event) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *Event) GetAclRuleId() int32 {
	if m != nil {
		return m.AclRuleId
	}
	return 0
}

func init() {
	proto.RegisterType((*Event)(nil), "tutorial.Event")
}

func init() {
	proto.RegisterFile("firewall_event.proto", fileDescriptor_firewall_event_006e9b0f0cbf225a)
}

var fileDescriptor_firewall_event_006e9b0f0cbf225a = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xcf, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0x05, 0x70, 0xa5, 0xdf, 0x97, 0x7f, 0x0e, 0x2c, 0x11, 0x42, 0xa1, 0x48, 0x10, 0x31, 0x65,
	0x4a, 0x25, 0x98, 0x19, 0x18, 0x18, 0xb2, 0xa1, 0x08, 0x66, 0xcb, 0xf5, 0x75, 0x2b, 0x4b, 0x6e,
	0x6d, 0x5d, 0xdf, 0x94, 0xe7, 0xe0, 0x8d, 0x91, 0xed, 0x96, 0x31, 0xf7, 0x77, 0x8e, 0x72, 0xcc,
	0x6e, 0x76, 0x1a, 0xd5, 0xb7, 0x30, 0x86, 0xab, 0x93, 0x3a, 0xd2, 0xe8, 0xd0, 0x92, 0x6d, 0x2b,
	0x5a, 0xc8, 0xa2, 0x16, 0x66, 0xfd, 0xb8, 0xb7, 0x76, 0x6f, 0xd4, 0x26, 0xde, 0xb7, 0xcb, 0x6e,
	0x43, 0xfa, 0xa0, 0x3c, 0x89, 0x83, 0x4b, 0xd1, 0xa7, 0x9f, 0x15, 0xcb, 0xdf, 0x43, 0xb5, 0x7d,
	0x60, 0x8d, 0x47, 0xc9, 0xb5, 0xe3, 0x02, 0x00, 0xbb, 0xac, 0xcf, 0x86, 0x72, 0xae, 0x3d, 0xca,
	0xc9, 0xbd, 0x01, 0x60, 0x70, 0xf0, 0xf4, 0xe7, 0xab, 0xe4, 0xe0, 0xe9, 0xec, 0x77, 0xac, 0x0a,
	0x7d, 0x67, 0x91, 0xba, 0x7f, 0x7d, 0x36, 0x5c, 0xcf, 0xa5, 0x47, 0xf9, 0x61, 0x91, 0x02, 0x85,
	0x6a, 0xa4, 0xff, 0x89, 0xc0, 0x53, 0xa4, 0x57, 0x76, 0x65, 0x84, 0x27, 0xbe, 0x38, 0x10, 0xa4,
	0xa0, 0xcb, 0xfb, 0x6c, 0x68, 0x9e, 0xd7, 0x63, 0xda, 0x3d, 0x5e, 0x76, 0x8f, 0x9f, 0x97, 0xdd,
	0x73, 0x13, 0xf2, 0x5f, 0x29, 0xde, 0xde, 0xb3, 0x1a, 0xd4, 0x49, 0x4b, 0xc5, 0x35, 0x74, 0x45,
	0x9f, 0x0d, 0xf9, 0x5c, 0xa5, 0xc3, 0x04, 0xed, 0x2d, 0x2b, 0x84, 0x24, 0x6d, 0x8f, 0x5d, 0x19,
	0xe5, 0xfc, 0x15, 0x5e, 0x22, 0xa4, 0xe1, 0xb8, 0x98, 0x58, 0xab, 0x22, 0xd6, 0x42, 0x9a, 0x79,
	0x31, 0x6a, 0x82, 0x6d, 0x11, 0xff, 0xfa, 0xf2, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xd2, 0x07,
	0x7e, 0x5d, 0x01, 0x00, 0x00,
}
